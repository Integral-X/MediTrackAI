name: Main Pipeline

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: meditrack_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/meditrack_test

      - name: Seed database
        run: npx prisma db seed
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/meditrack_test

      - name: Run linting
        run: npm run lint

      - name: Run format check
        run: npx prettier --check "src/**/*.ts" "test/**/*.ts"

      - name: Create .env file
        run: cp .env.example .env

      - name: Run tests
        run: npm run test:cov
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/meditrack_test

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/meditrack_test

  release:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build application
        run: npm run build

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase repository name
        id: repo
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository }}

      - name: Get next version
        id: version
        uses: mathiasvr/get-next-version-action@v1
        with:
          prefix: v

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.lowercase }}:${{ steps.version.outputs.version }}
            ghcr.io/${{ steps.repo.outputs.lowercase }}:latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            Automated release based on commit ${{ github.sha }}
          draft: false
          prerelease: false
